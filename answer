using System;

namespace _1st_Lab {
    class Program {
        static void Main(string[] args) {


            //Level 1 ----------------------------------------

            static void task_1_4() {
                if (!int.TryParse(Console.ReadLine(), out int x)) {
                    Console.WriteLine("Incorrect input");
                    return;
                }
                if (x == 0) {
                    Console.WriteLine("Incorrect input. Will be a division by 0");
                    return;
                }

                double result = 0;
                for (int i = 0; i <= 8; i++) {
                    result += Math.Cos(x * (i + 1)) / (Math.Pow(x, i));
                }
                Console.WriteLine(result);
            }

            static void task_1_9() {
                double result = 0;
                int factorial = 1;

                for (int i = 1; i <= 6; i++) {
                    factorial *= i;
                    result += (Math.Pow(-1, i) * Math.Pow(5, i) / factorial);
                }

                Console.WriteLine(result);
            }

            static void task_1_15() {
                int a1 = 1, b1 = 1;
                int a2 = 2, b2 = 1;
                int a3, b3;
                for (int i = 1; i < 5; i++) {
                    a3 = a1 + a2;
                    b3 = b1 + b2;
                    a1 = a2;
                    b1 = b2;
                    a2 = a3;
                    b2 = b3;
                }
                Console.WriteLine(a1 / (b1 * 1.0));
            }

            static void task_1_16() {
                double result = 0;
                double last_cnt = 1;
                for (int i = 0; i < 64; i++) {
                    result += last_cnt;
                    last_cnt += last_cnt;
                }
                Console.WriteLine($"Ответ в тоннах: {result / 15000000}");
            }

            static void task_1_18() {
                int cnt = 10;
                for (int i = 3; i <= 24; i += 3) {
                    cnt += cnt;
                    Console.WriteLine($"{i} hours: {cnt}");
                }
            }


            //Level 2 ----------------------------------------

            static void task_2_2() { 
                int n = 1;
                int p = 1;
                while (true) {
                    n += 3;
                    p *= n;
                    if (p > 30000) {
                        Console.WriteLine(n - 3);
                        return;
                    }
                }

            }

            static void task_2_4() {
                if (!double.TryParse(Console.ReadLine(), out double x)) {
                    Console.WriteLine("Incorrect input");
                    return;
                }
                if (Math.Abs(x) >= 1) {
                    Console.WriteLine("Incorrect input");
                    return;
                }

                double tochange = x * x;
                double s = 1;
                while (tochange >= 0.0001) {
                    s += tochange;
                    tochange *= (x * x);
                }
                Console.WriteLine(s);
            }

            static void task_2_7and8() {
                double distPerDay = 10;
                int dayCount = 1;
                double totalDist = 10;

                while (distPerDay <= 20) {
                    if (dayCount == 7) {
                        Console.WriteLine($"Суммарный путь за 7 дней: {totalDist}");
                    }
                    if (totalDist >= 100) {
                        Console.WriteLine($"На {dayCount} дне спортсмен суммарно пробежал больше 100 км ");
                    }
                    distPerDay *= 1.1;
                    dayCount++;
                    totalDist += distPerDay;
                }

                Console.WriteLine($"Начиная с {dayCount} дня спортсмен пробегает больше 20 км за раз");
            }


            //Level 3 ----------------------------------------

            static void task_3_1() { 
                for (int j = 1; j <= 10; j++) {

                    int i = 0;
                    double x = 0.1 * j;
                    double sequnece_sum = 0;

                    
                    int p = 1;
                    bool flag = true;

                    double current_numerator = 1;


                    double current_denominator = 1;
                    int nextDenNums = 2;


                    while (true) {
                        double newElem = p * (current_numerator / current_denominator);

                        if (Math.Abs(newElem) < 0.0001) {
                            break;
                        }

                        sequnece_sum += newElem;

                        p = -p;

                        current_numerator = current_numerator * x * x;
                        current_denominator = current_denominator * nextDenNums * (nextDenNums - 1);
                        nextDenNums += 2;
                    }

                    double y = Math.Cos(x);

                    Console.WriteLine($"x = {Math.Round(x, 1)}; s = {sequnece_sum}; y = {y}");
                }
            }

            static void task_3_9() {
                for (double x = 0.1; x <= 0.5; x += 0.05) {
                    double sequnece_sum = 0;


                    int p = 1;
                    bool flag = true;

                    double current_numerator = x;
                    double current_denominator = 1;

                    while (true) {
                        double newElem = p * (current_numerator / current_denominator);

                        if (Math.Abs(newElem) < 0.0001) {
                            break;
                        }

                        sequnece_sum += newElem;

                        p = -p;

                        current_numerator = current_numerator * x * x;
                        current_denominator += 2 * x;
                    }

                    double y = Math.Atan(x);

                    Console.WriteLine($"x = {Math.Round(x, 2)}; s = {sequnece_sum}; y = {y}");
                }
            }


            //------------------------------------------------
            task_2_2();

        }
    }
}
